==================================================================================
==================================================================================
               html                html                        html
----------------------------------------------------------------------------------

1.网页的拓展名是 .html
2.html：超文本标记语言--标签
特点：1.带<>2.成对（并不是所有的）
3.utf-8  字体编码  
4.ctrl+s  保存的快捷键
  ctrl+R 打开网页的快捷键
  ctrl+A 全选
  ctrl+C 复制  ctrl+x剪切   ctrl+v粘贴   F5刷新浏览器   F4关闭浏览器
  ctrl+z 撤销
5.标签 
标题标签
<h1>最大</h1>----><h6>最小</h6>
段落
<p>段落</p>
字体标签<font color="red" size="25px"></font>
color="red" 属性=”属性值“
px 像素 单位
图片标签
<img src="路径" width="100px" height="200px"/>                    -单标签
路径：相对/绝对路径 。
我们常用的相对路径。

超链接
<a href="地址">

</a>
href 可以连接外部网页 或锚点定位

http格式
http://www.name.com
换行标签<br/>
-----------------------------------------------------------------
icon图标:
<link href="/favicon.ico" rel="shortcut icon">
--------------------------------
2.22
html&&css
1.全选的快捷键  ctrl+A
2.复制的快捷键 ctrl+C
3.粘贴的快捷键 ctrl+V
4.剪切的 ctrl+x
5.保存的 ctrl+s
6.打开网页ctrl+R
7.撤销 ctrl+z
8.html的注释快捷键 ctrl+？
-------2
1.认识hbulider  webstorm sublime dw notpad
<!DOCTYPE html>  html文档 h5的特有标志
页面的最大父级 window ->document-> html-> body ->具体标签
2.什么是html？
超文本标记语言。就是标签
<p>段落标签</p>  
<h1>最大标题标签</h1><h2></h2><h3></h3><h4></h4><h5></h5>
<h6>最小标题标签</h6>
<img src="路径"/>
<！--被注释的内容-->
<font>字体标签</font>
<center>居中标签</center>  h5中被舍弃
<strong>加粗标签</strong>或 <b>加粗标签</b>
<i>斜体标签</i> 或<em></em>
<s>删除线标签</s>
<sup>上标标签</sup>
<sub>下标标签</sub>
<u>下划线标签</u>
<hr/> 水平分割线
<br/>换行标签
<a href="">超链接标签</a>
转移字符：&+字母+； 构成  如空格字符   &nbsp;
列表标签
无序列表
<ul>
	<li></li>
	<li></li>
</ul>
有序列表
<ol>
	<li></li>
	<li></li>
</ol>
自定义列表
<dl>
	<dt>标题</dt>
	<dd></dd>
	<dd></dd>

</dl>
---------------------

HTML=结构层  css=表现层 js=行为层

css样式--》标签和标签内容的特征（属性：属性值）

css三种样式：
  1.内嵌式--写在标签内<img style="width:200px;">
  2.行内样式--将style标签写在head标签之间
  3.外部链接
     <link rel="stylesheet" href="地址" type=""text/css>

三大选择器  
  1.标签选择器
  2.class选择器
  3.ID选择器
  4.全局选择器 *号 （网页中所有的标签都得选）

选择器优先级：权重 

  标签选择器的权重是  1
  class选择器的权重是 10
  ID选择器的权重是    100

权重是可以叠加的

---------------------------------------------------------------------

css中常见的属性：
  text-decoration:none;  去掉下划线
  text-decoration:underline;  加下划线
  text-decoration:overline;   加上划线

-----------------------------------------------------------------------
表格标签
<tr></tr>       行标签                                                                --------------------
<td></td>       单元格标签                                                            -  underline
<th></th>       表头标签                                                              -  overline
                                                                                      -  decoration
rowspan="个数"    上下合并单元格个数                                                  -  checkbox
colspan="个数"    左右合并单元格个数                                                  -  radio
                                                                                     -  rowspan
-----------------------------------------------------------------                     -  colspan
                                                                                      -  action method                                                                                        
                                                                                       
表单
  <form action="表单提交地址" method="get/post"></form>

  get   通过网页地址来提交 可以看到提交内容 不安全 提交内容不能过大（4k左右）
  post  不是通过网页提交 比较安全 提交数据大（几个G） 提交的数据不能太大

  input 的类型有哪些  text password button radio checkbox submit等


表单类型
  文本框 <input type="text" />
  密码框 <input type="passwrod" name="" id="" value="" />
  普通按钮 <input type="button" name="" id="" value=" />
  单选框  <input type="radio" name="" id="">
  多选框  <input type="checkbox" name="" id="">
  提交按钮  <input type="submit" name="" id="">


------------------------------------------------------------

<ul>无序列表6
   一般用于nav(导航条) 
    a 去项目符号的代码   list-style:none/circle/disc/square; 
    
        项目符号类型   circle(空心圆)
                       disc(实心圆)
                       square（实心正方）
                       none（去项目符号）
                    
   b 边框 border
              
              1.border-width:xx px;  边框粗细
              2.border-color:red;  边框颜色
              3.border-style:solid/dashed;  边框样式
              4.order-radius:px/%;  边框圆角 

   c 外边距 margin
     内边距 padding
     无论是外边距还是内距都有四个 top right bottom left 上 右 下 左（顺序不能乱哟）
     argin:1px 1px;  上下 左右
     margin：1px 1px 1px；上 左右 下
     margin：10；        上下左右
     内边距：padding     同上
         auto 自适应（居中）
-------------------------------------------------------------
  float:left/right;浮动
     浮动带来的问题：凡是给浮动的元素它后面紧跟那元素就会和他在一行
     
     ****如何清除浮动
          1 给父级加一个高 不建议这方法
          2 在浮动的元素的后面给元素添加一个空div设置clear：both；
          3 给父级添加一个伪类 father：after{
                                              content:'';
                                              display:block;
                                              height:0;
                                              clear:both;
                                              visibilty:hidden;
                                              }最长用的方法
        
-----------------------------------------------------------------------------------------

  div盒子模型  <div></div>
    div的实际宽度 width+border*2+padding*2+margin*2
    div的实际高度 height+border*2+padding*2+margin*2
    div的背景 background
           背景颜色  background-color
           背景图片  background-image:url(’路径‘);
           背景位置  background-position:12px 6px; 代表先水平后上下
           背景大小  background-size：；100% 100%；代表水平和上下
           背景平铺  background-repeat:no-repeat;
           background:url()no-repeat 100% 100%;
           background:red;
           background-position:100% 100%;处于中心

-------------------------------------------------------------------------------

手机端 320-640  idap 640-968  电脑 968-1299  /px

div的高建议写auto

浮动会让下一个元素和它在一行

-----------------------------------------------------------------------------------

div的特点：

  div占据一行(缺点)可以设置宽高元素（优点）类似于这种独占一行可以设置宽高元素的我们称之为块级元素 
    a标签优点：不独占一行我们把它称之为行级元素 缺点：不可以设置宽高，

行级元素：a span 剩下的都是块级

块级元素怎么转换成行级元素  display：inline；
行级转块级  display：block；
既有行级的优点又有块级的优点 display:inline--block; 行级块元素

选择器 后代选择器 div a{  }
       并集选择器 ul,li{  }


-----------------------------------------------------------------------
position 定位

    布局、结构
    position相对定位（relative）和绝对定位(absolute)
    position:relative; 给的一个参考物往往都给父级
    position：absolute；就是一个具体值  left right top bottom   单位px
             {  
              position:a bsolute;
              top:0;
              bottom:0;
              left:0;
              right:0;
              margin:auto;} 处于中心哟！！！推荐使用的方法
    
    position:fixed; 固定定位 父级是窗口



   
--------------------------------------------------------------------------

层次关系------  z-index：；   默认值为  0

   数字越大说明层次关系越大   就在上面
   数字越少说明层次级别越小   就在下面

   必须和 position:absolute; 配合使用****

常用的三种设置宽度方法：
   width：600px；/页面宽度
   max-width:640px;/页面最大宽度是
   width：100%；/平铺窗口





-------------------------------------------------------------------------------
unicode引用

unicode是字体在网页端最原始的应用方式，特点是：

兼容性最好，支持ie6+，及所有现代浏览器。
支持按字体的方式去动态调整图标大小，颜色等等。
但是因为是字体，所以不支持多色。只能使用平台里单色的图标，就算项目里有多色图标也会自动去色。
注意：新版iconfont支持多色图标，这些多色图标在unicode模式下将不能使用，如果有需求建议使用symbol的引用方式

矢量图的原理：
　　矢量图，也称为面向对象的图像或绘图图像，在数学上定义为一系列由线连接的点。矢量文件[2] 中的图形元素称为对象。每个对象都是一个自成一体的实体，它具有颜色、形状、轮廓、大小和屏幕位置等属性。
　　矢量图使用直线和曲线来描述图形，这些图形的元素是一些点、线、矩形、多边形、圆和弧线等等，它们都是通过数学公式计算获得的。例如一幅花的矢量图形实际上是由线段形成外框轮廓，由外框的颜色以及外框所封闭的颜色决定花显示出的颜色。

------------------------------------------------------------------------------------------------
伪类和伪元素

  伪类有一个冒号：
  伪元素右两个冒号::

  常见伪类有  :link  :visited :hover :active  
  常见伪元素  p::    after{}  p::before{}  p::first-letter{} p::first-line{}
  
  伪类的作用就是改变信息             伪元素就相当于一个虚拟的容器（虚拟的span）

伪类：:link正常状态下的效果
      :visited鼠标访问过后的效果、
      :hover 鼠标滑过的效果
      :active  鼠标点击时的效果               顺序是不能变的

      

伪元素：
        p::first-letter{}  首字母或者第一个汉字
        p::first-line{}    第一行
     

--------------------------------------------------------------------------------------

盒子大小  box-sizing

div 的实际宽度=width +border*2 +margin*2 +padding*2
width=就是实际宽度 包含了margin padding border
box-sizing:border-box;    取最大值

vertical-align:middle;   图片垂直居中 解决图片不居中
text-align:center;      文字水平居中

让盒子处于父级元素中心的方法

方法1  position:absolute;
       top:0;
       bottom:0;
       left:0;
       right:0;
       margin；auto；

方法2  position:absolute;
       top:50%;
       left:50%;
       margin-top:-height/2;
       margin-left:-width/2;

position：absolute； 会自动转化行级块


---------------------------------------------------------------------------

下拉框：select
<select name="">
			<option value="">北京</option>
			<option value="">山东</option>
			<option value="">广西</option>
			<option value="">甘肃</option>
</select>
==================================================================================

---------------------------------------------------------
localstorage:  web存储 它是一个对象
  好处 这个存储没有时间限制
            只要没有清除数据就会一直存在
            cookie的存储量忒小  4k左右
            localstorage大哟是5兆       

sessionStorage     窗口关闭时就不在了
JSON.parse()//转json

1设置
    localstorage.name='属性值';
    localStoage.setItem('name','属性值');

2获取
  localStoage.name;
  localStoage.getItem('name)

在数据格式中只有arr string json 所有localstorage都是string 无论什么格式写的都要转成string

3删除数据：
  localStorage.clean() 删除所有
  localStorage.removeItem("name")  //仅仅删除name








====================================================================================================
==================================================================================================== 
           html5                            html5
语义化标签：
---输入提示
	<input type="text" name="" list="aa" id="" />
	<datalist id="aa">
		<option value="html"></option>
		<option value="vue"></option>
		<option value="css"></option>
		<option value="js"></option>
	</datalist>

----折叠的面板：
	<details open> open加上就是展开的
		<summary>summary</summary>
		<h2>我是函数是<h2>
	</details>

----进度条：
	<progress max="100" value="70">
		<span>70</span>%
	</progress>

----h5新增的表单元素
	url search email tel range color

---data自定义属性
	data-zhanzi="wang"


---延迟加载：
   defer="defer";

---异步加载：
	async="async"





-------------------------------拖拽
dragable:
	ondragstart       拖拽前触发
	ondragend         拖拽后触发
	ondrag			  拖拽时触发（不停执行）
	ondragleave       进入目标元素是触发
	ondragover		  enter 和 leave之间连续触发
		oDiv.ondragover = function( ev ){
			ev.preventDefault();语法规定要想触发drop事件，就必须在ondragpver中阻止默认事件

		}

--------------------------------------------------------
drag拖放：
    第一步 搞清楚被拖拽元素 和拖拽元素
    第二步 给被拖拽元素设置draggable="true"
    第三部 拖拽元素和目标元素身上的事件

拖拽元素事件：
    ondrag  应用于拖拽元素，整个拖拽过程都会调用
    ondragstart  应用于拖拽元素，当拖拽开始时使用
    ondragleave    应用于拖拽元素，当鼠标离开拖拽元素时调用
    ondragend      应用于拖拽元素，当拖拽结束时调用
目标元素事件：
    ondragenter  应用于目标元素，当拖拽元素进入时调用
    ondragover   应用于目标元素，当停留在目标元素上时调用
    ondrop       应用于目标元素，当在目标元素上松开鼠标时调用
    ondragleave  应用于目标元素，当鼠标离开目标元素时调用


-------------------------音频
video

---------------------------canvas
1 凡是有fill的是填充 有stroke的是边框
2 rect(x,y,w,) 画一个矩形
3 fillStyle     填充色
4 lineWidth   边框的粗细























本地存储：

--------------------------------------------------
web storage：

  web stroage 中的 api
	length:获得当前web storage中的条目
	key(n):获取web stroage中的第N个条目
	getItem(key):返回指定的key内容 不存在则返回null 返回类型是字符串
	setItem(key,value):设置指定key的值为value
	removeItem():根据指定的key删除键值为key的内容
	clear:清空web storage的内容

  数据的储存与获取：
	localStorage.steItem('key','value');   保存键值对数据	
	var val=localStorage.getItem('key');   获取数据
	localStoage.key="key";
	var val=localStorage.key;

  html5储存基于键/值对

  数据的删除的清空：
	var val=sessionStorage.removeItem(key);
	var val=sessionStorage.removeItem(1);  1会被转成string
	

  不管使用什么方法都得使用
	.setItem('key','value')保存数据   通过键/值 
	.getItem('key')读取数据        通过key


web SQL：
	websql是数据库存储和访问的另一种方式  被称为SQLLite
	
  使用web SQL Database API
    打开和创建数据库: 
    	var db=openDatabase('db','1.0','first database','2*1024*1024')
        参数一是 数据库名
        参数二是 版本号
        参数三是 数据库的描述
        参数四是 数据库的大小

  检测数据库API数据库是否在浏览器上有效：
  		var db;
  		if(window.openDatabase){
  			db.openDatabase('mydb','1.0','my first database','2*1024*1024');
  		}

  创建数据表：
		用transaction方法来执行事务处理
		  eg: db.transaction(function(tx){
		  	tx.executeSql('CREATE TABLE tweets(id,data,tweet)');
		  })


-----------------------------------------------------------------
canvas:
	检测兼容
		var canvas=document.getElementById("myCanvas");
		if(canvas.getContext){
			alert('您的浏览器支持canvas');
		}else{
			alert('你的浏览器不支持canvas')
		} 

	拿到2d对象
		var ctx=canvas.getContext('2d');

	绘制正方形
		ctx.fillStyle="green";    //颜色填充写前面
		ctx.fillRect(10,10,200,200); //绘制一个填充的矩形
		strokeRect(x,y,width,height);//绘制一个矩形的边框
		clearRect(x,y,width,height);//清除指定矩形区域
	
	绘制路径：
		图形是元素的路径，路径是通过不同颜色，宽度，。。。组成的一个集合；
		1、创建路径起始点
		2、使用图画命令画出路径
		3、之后吧路径关闭
		4、描边和填充渲染路劲

	用到的函数：
    sava()
    ....
		beginPath() 新建一条路径，生成之后，图形绘制命令被指到到改路劲、
		closePath() 闭合路劲
		stroke() 通过线条来绘制图形的轮廓
		fille()  填充
		
	绘制圆弧： 使用arc()方法 还有arcTo();
	    arc (x,y,radius,startAngle,endAngle,anticlockwise);
	    
         eg ctx.arc(100,100,75,0,Math.PI*2,true);
			ctx.closePath();
			ctx.fillStyle="red"
			ctx.fill();

贝塞尔曲线和二次方曲线：
	贝塞尔曲线可以是二次方或者三次方的形式
	  eg: bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
	      六个参数
	      参数1、2 3、4是两个控制点
	      参数5、6是曲线的坐标
	    
	    绘制二次样式条曲线
	      eg：quadraticCurveTo(cp1x,cp1y,x,y);  有两条控制线条
	      
	      
文件：
	选择默认<input type=""file" accept="images/*">
  检测上传文件名：
  	for(var i=0;i<f.files.length;i++){
		ff=f.files[i];
		console.log(ff.name)
	}
      



================================================
瀑布流:
    特点:宽度相同高度不同 或者 高度相同宽度不同
    两张常见形式:
        1.浮动式:外层容器浮动布局(简单)
        2.定位式:没有简单的浮动容器而是按照外层容器进行定位

        获取屏幕的高:
          document.documnetElement.clientHeight;
        滚动条事件:
          window.onscroll;
        获取滚动条的高度:
          document.documentElement.scrollTop||document.body.scrollTop;//兼容问题
        滚动后body的高度:
          document.body.scrollHeight;









         
         
         


