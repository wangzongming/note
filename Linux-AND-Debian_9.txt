linux服务器笔记：
======================================
Linux 英文解释为Linux is not Unix

---------------
init:
	init进程是系统所有进程的起点，没有这个进程系统任何进程都不会起动，
	init程序首先是需要读取配置文件/etc/inittab  //debian没有这个文件
	
----------------
运行级别：
	许多程序需要开机自启，在weindow叫做服务(service)，在linux叫做守护进程（daemon）
	不同场合需要启动不同的程序，linux允许为不同的场合，分配不同的开启程序，
	这就叫做运行级别（runlevel）,也就是说启动时根据 运行级别 确定要运行哪些程序

linux系统有7个运行级别（runlevel）
	运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动
	运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登录
	运行级别2：多用户状态（没有nfs）
	运行级别3：完全多用户状态（有nfs），登录后进入控制命令模式
	运行级别4：系统未使用，保留
	运行级别5: X11控制台，登录后进入图形GUI模式
	运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动

	
------------------目录解释
列出所有目录	ls / 
/bin	bin是binary的缩写，这个目录放着经常使用的命令
/boot	这里存放的是启动linux时使用的一些核心文件包括连接文件和镜像文件
/dev	dev是device(设备)缩写，该目录下存放的是linux外部设备，在linux中访问设备和访问文件是相同的
/etc    用来存放所有的系统管理所需的配置文件和子目录
/home	用户的主目录，在linux中每个用户都有一个自己的目录
/lib	存放系统最基本的动态链接共享库，作用类似于window的dll文件，几乎所有的应用程序都需要用到这个共享库
/host+found	一般情况下是空的，在系统非法关机后，这里存放了一些文件
/media	系统会自动识别一些设备，列如U盘，光驱等，当识别后，linux会把设备后的设备挂载到这个目录
/mnt	系统提供该目录让用户临时挂载别的文件系统的，我们可以将光驱挂载到mnt上然后进入该目录就可以查看光驱里面的内容了
/opt	这是给主机额外安装软件摆放的目录  默认是空的
/proc	这个目录是个虚拟目录，他是系统内存的映射，我们可以通过直接访问这个目录来过去系统信息
		我们可以直接修改里面的某些文件
		可以通过修改下面的命令让别人ping不到你
		/proc/sys/net/ipv4/icmp_echo_gnore_all
/root	该目录为系统管理员，也称作超级权限的用户主目录
/sbin	s就是super User的意思，这里存放着系统管理员使用的管理程序
/srv	改目录存放一些服务器启动之后需要提取的数据
/sys	这是linux2.6内核的一个很大变化
/tmp	这个目录用来存放一些临时的文件
/usr	这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录
/usr/bin 系统用户使用的应用程序
/usr/sbin 超级用户使用的比较高级的管理程序个系统守护程序
/usr/src   内核源代码默认的放置目录
/var	放置不断扩充的东西，比如日志等


------------------------linux文件基本属性
linux系统是典型的多用户系统，不同的用户处于不同的地位，拥有不同的地位
	ls -l显示文件的属性以及文件所属的用户和组
	
	eg: dr-xr-xr-x   2 root root 4096 Dec 14  2012 bin
	
	第一个属性：
		d 目录
		- 文件
		/ 连接文档
		b 存储的接口设备
		c 装置文件里面的串行端口设备，列如键盘，鼠标
	
	接下来的字符串中：
		三个为一组，且均为【rwx】的三个参数组合，
		r 代表可读
		w 代表可写
		x 代表可执行
		注意：
			这三个权限位置不变，如果没有权限就会出现减号【-】
		
		文件属性图：
			文件类型	属主权限	属组权限	其它用户权限
			0			1  2  4		4  5  6		7  8  9
			d			r  w  x     r  -  x     r  -  x
			目录文件	读 写 执行  读 写 执行  读 写 执行
			
	从左到右用0-9这些数字表示

更改文件属性：
	1.chgrp：更改文件属组
		eg： chgrp  [-R]  属组名文件名
		参数选项：-R:递归更改文件属组，就是加上后里面的文件属组也会跟变
	

-----------------------
linux文件与目录管理
	linux的目录结构为树状结构，最顶级的目录为根目录 /

  绝对路径：
	路径写法，由/写起， 例如/usr/share
	
  相对路径：
	路径写法， ./man  这就是相对路径
	
  处理目录的常用命令：
	ls	  列出所有目录
		ls /  列出所有文件（常用）
		ls -a 全部文件，连同隐藏文档一起列出来（常用）
		ls -d 仅列出目录本身，而不是列出目录内的文件数据（常用）
		ls -l 长数据串列出，包括文件的属性与权限等待数据（常用）
	cd 	  切换目录
	pwd	  显示当前目录
	mkdir 创建一个新的目录
		mkdir [-mp] 目录名称
		mkdir -m 配置文件的权限
		mkdir -p 帮助你直接将所需要的目录递归创建起来
	rmdir 删除一个空的目录
	cp	  复制文件或者目录
		cp [-adfilprsu] 来源档  目标档
			-a  当-pdr的意思
			-d  若文档为链接档的属性（link file）则复制链接档属性而非文件本身
			-f  为强制的意思
			-i  若目标档已经存在时，在覆盖时会先询问
			-l  进行硬接是连结档创建，而非复制文件本身
			-p  连同文件的属性一起复制过去，而非使用默认属性（备份常用）
			-r  递归持续复制（常用）
			-s  复制成为符号连结，就是 捷径文件
			-u  若destination比source旧才升级destination
	rm    移除文件或者目录
		rm [-fir]  文件或者文件名
			-f  就是force的意思，忽略不存在的文件，不会出现警告信息
			-i  互动模式，在删除前会询问使用者是否动作s
			-r  递归删除，最常用的用在目录删除
			
	mv（移动文件与目录，或者修改名称）
		mv [-fiu] source destination
		mv [option] sourcel source2 source3  ...directory
		
		-f  force强制的意思，如果目标存在不会询问直接覆盖
		-i  这个选项会询问
		-u  若目标已经存在，且source比较新才会升级update
		
-------------------
linux文件内容查看
	cat由第一行开始显示文件内容
	tac从最后一行开始显示，和cat刚好是倒着写的
	nl显示的时候，顺道输出行号!
	more一页一页的显示文件内容
	less与more类似，但是比more更好的是，他可以往前翻页
	head只看头几行
	tail只看尾巴几行
	


-------------------
常用命令：
	可以使用man命令查看各命令文档
	eg: man cp

-----------------------关于系统

------关机指令   shutdown
立马关机     shutdown -h now 或者 halt 或者 poweroff
在20:30关机  shutdown -h 20:30
十分钟后关机 shutdown -h +10
系统立马重启 shutdown -r now 或者 reboot
10分钟后重启 shutdown -r +10

注意：
	不管是关机还是重启，首先运行sync命令，把内存中的数据写入磁盘中

关机命令有：
	shutdown -h now
	halt
	poweroff
	init 0
	
重启命令有：
	shutdown -r now
	init 6
	reboot
-------

------------目录结构
列出所有文件	ls /


-----------------------------------
Linux系统用户账号的管理
  1.添加新的用户账号使用useradd命令，
	eg:  useradd 选项 用户名 
	选项：
		-c comment 指定一段注释性的描述
		-d 目录 指定用户的主目录
		-g 用户组，
		-G 用户组，
		-s Shell文件，指定用户登录的shell
		-u 用户名，
	useradd -d /usr/sam -m sam
	
  2.删除账号
	userdel 选项 用户名
	常用的选项是-r 作用是把用户的主目录一起删除
	eg userdel sam
	
  3.修改账号
	修改用户账号  usermod 选项 用户名，
	常用选项包括 -c -d -m -g -G -s -u以及-o 等

--------------------------
linux磁盘管理
	很重要
	常用的三个命令为df  du   fdisk
	
	df	列出文件系统的整体磁盘使用量
	du  检查磁盘空间使用量
	fdisk  用于磁盘分区
	
  df 命令参数功能：检测文件系统的磁盘空间的占用情况，
	 利用该命令来获取硬盘被占了多少空间等信息
	 df [-ahikHTm] [目录或文件名]
	 -a  列出所有文件系统，包括系统特有的/proc等文件系统
	 -k  以KBytes的容量显示个文件系统
	 -h  以人们易阅读的GByts KByts等格式自行显示	
	 -m  以MByts的容量显示个文件系统
	 -H  以 m=1000k取代m=1024k的进制方式
	 -T  显示文件系统类型
	 -i  不用硬盘容量而以index的数量来显示


  du  命令也是查看使用空间的，但是与df不同的是linux du命令
	  是对文件和目录磁盘使用空间查看的
	  eg: du [-ahskm]  文件目录名称
	  选项参数
	  -a  列出所有的文件目录容量
	  -h  以G/M显示 更易懂
	  -s  列出总量而已  而不列出每个各别的目录占用容量
	  -S  不包括子目录的总数，与-s有点差别
	  -k  以KBytes列出容量显示
	  -m  以MBytes列出容量显示
	  
  fdisk
		fdisk -l  列出所有分区信息
  

 ---------------------------
 常用vim命令
	打开文件   vim  文件名
	保存退出   :wq
	进入命令模式  ESC键
	进入编写的模式  i a 
	删除游标所在的那一行  dd
	删除游标所在的向下N行  ndd  eg 3dd
	复制游标所在的那一行  yy
	复制光标所在的下n行   nyy   eg 3yy
	粘贴到游标的上面  P
	黏贴到游标的下面  p  就是大小写问题
	复原前一个动作   u
	重做上一个动作  ctrl + r
	. 重复前一个动作 可以多黏贴等
	
	
================================================
shell脚本 
  shell脚本 (shell script) 是一种为shell编写的脚本程序

  第一个shell脚本
  #!/bin/bash
  echo "hello world!"
  
  #!是一个特定的标记，它告诉脚本需要什么解释器执行，即使是哪一种shell
  运行shell  
	1 作为可执行程序
		将编写好的文件保存  
		chmod +x ./test.sh  #使脚本具有执行权限
		./test.sh  #执行脚本
		
	2 直接运行解释器
		/bin/sh test.sh
		/php/php test.php
		这种方式运行的脚本 不需要在第一行指定解释器的信息 写了也没用

  shell变量
	定义变量：name="wang"  #等号左右不能有空格
	使用变量：echo $name  或者 ${name}  #推荐   #在变量名前加上一个美元符即可
	
	注意：
		使用变量的时候才加$符号使用变量的时候才加$符号 二次赋值的时候不需要加
	
	for file in 'ls/etc'  这个语句直接将/etc下目录文件名循环出来
	
	只读变量：readonly
		只读变量不可被修改
		eg #!/bin/bash
			mgUrl='http://www.123.com'
			readonly mgUrl
	
	删除变量：
		删除变量使用unset命令可以删除变量
		unset variable_name
		
	shell字符串：
		单双引号和php差不多
		拼接字符串  echo $a$b    ||  a="wang $"zong" "  ||  a="wang ${zong} "
	
	获取字符串长度：
		string="abcd"
		echo ${#string}  #输出4
		
	提取子字符串
		string="wangzongming"
		echo ${string:1:4}  #输出 angz
	
	查找子字符串
		查找字符 “i” 或者 “s” 的位置
		string="i wnag s"
		echo  expr index "$string" is  
		
	shell数组
		只支持一组数组不支持多维数组，不限制数组的大小
		
	定义数组：
		数组名=(值1 值2 ...)
		array=(value0 value1 value2)
		array[3]=value3
	读取数组：
	${数组名[下标]}
	value=${array[0]}
	
	使用@符号可以获得数组中所有元素
	echo ${array[@]}
	
	获取数组的长度：
		length=${#array[@]}
		#或者
		length=${#array[*]}
		#获取单个数组的长度
		length=${#array[0]}
	
	shell注释 #符号开头的就是注释 没有多行注释


debian系统
=================================================

常用命令：
-------------------
系统：
    修改用户密码：
	passwd root

    系统升级：apt-get update
    查看内核：uname -a
    查看硬盘分区：fdisk -l
	查看当前有哪些进程：ps -aux
    查看当前的内存使用情况：free -m
	终止一个程序：kill 进程号 或killall 进程名
    查看当前监听80端口的程序  lsof -i :80
	查看路由信息  route -n/netstat -rn
    路由添加删除  route add -net 192.168.0.0 netmask 255.255.255.0 gw 172.16.0.1
                  route del -net 192.168.0.0 netmask 255.255.255.0 gw 172.16.0.1    

-------------------
文件：
	查看目录占用空间：du -hs 目录名
	查看当前目录或子目录 ls -d
	复制文件夹：
		CP [optin] ./aa/aa ./bb/aa
			选项选填 -b(同名备份原来的文件)
					-r(按递归方式保留原目录结构复制文件)
					-f（强制覆盖同名文件）
					
-------------------
软件：
	 安装软件：apt-get install XXX     
			eg: apt-get install git


-------------------
网络：




-------------------
vim基本操作：
	ESC 键切换操作
	-i/-p  插入
	:wq  保存退出
	:exit 
	---------复制黏贴
	退出yy复制游标所在行整行。或大写一个Y。
	2yy或y2y复制两行。 ㄟ ，请举一反三好不好！ :-)
	y^复制至行首，或y0。不含游标所在处字元。
	y$复制至行尾。含游标所在处字元。
	yw复制一个word。
	y2w复制两个字（单词）。
	yG复制至档尾。
	y1G复制至档首。
	p小写p代表贴至游标后（下）。
	P大写P代表贴至游标前（上）。

----------
apt主要命令
	apt-cache search  ------package 搜索包
	apt-get install ------package 安装包
	apt-get remove -----package 删除包
	apt-get remove --purge ------package 删除包，包括删除配置文件等
	apt-get update ------更新源
	apt-get upgrade ------更新已安装的包
	apt-get dist-upgrade ---------升级系统
	apt-get dselect-upgrade ------使用 dselect 升级

-----
文件重命名
vm    eg vm /a /b  可以是移动文件亦可以是改名

----------------
让程序后台运行 
ctrl+z 
bg %[num]  切换到后台
fg %[num]	切换到前台
jobs -l 查看在运行的程序







