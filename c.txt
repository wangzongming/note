----------------------C----------------------
first dome:

	#include <stdio.h> //#include 是一个预处理命令，用来引入头文件。  printf()函数在stdio.h（编译时找不到就会			     报错）中声明
			   //stdio.h是一个头文件（标准输入输出文件）

	int main(){ //所有c语言都要包含main函数  代码从main函数开始执行
		printf("hello woed"); //printf（）用于格式化输出到屏幕

		return 0;//语句用于表示退出程序
	}

c程序结构：
	预处理器指令
	函数
	变量
	语句 & 表达式
	注释

c的令牌：
	c程序由各种令牌组成，令牌可以是关键字、标识符、常亮、字符串值、或者是一个符号

	分号：分号是每句语句的结束符，也就是语句结束后必须加上分号
	注释：//单行注释      /*多行注释*/
	标识符：标识符是用来识别变量函数，或者其他自定义的项目名称
	关键字：
		c中的保留字
		auto	else	long	switch	break	enum	
		register	typedef		case	extern
		return	union	char	float	short	unsigned
		const	for	signed	void	continue	
		goto	sizeof	volatile	default	
		if	static	while	do	int	struct
		_Packed		double
		
	空格：...


数据类型：
	在Cy语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量储存占用的空间
	以及如何解释储存的为模式。

	C中类型可分为以下几种：
	1、基本类型：算术类型（整数类型和浮点类型）
	2、枚举类型：算术类型（被用来定义在程序中只能赋予其一定的离散整数值的变量）
	3、void类型：类型说明符 void表名没有任何可用的值
	4、派生类型：指针类型、数组类型、结构类型、共用体类型、函数类型
		数据类型和结构类型统称为聚合类型，
		函数类型指的是函数返回值得类型。

	
	整数类型：
	类型		储存大小	值范围
	char		1字节		-128到127 或 0到255	
	unsigned char	1字节		0到255
	signed char	1字节		-128 到 127
	int		2或者4个字节	-32,768 到 32767 或者 -2147,483,648 到  2,147,483,647
	unsigned int 	2或者4个字节	0 到 65,535 或 0 到 4,294,967,295
	short		2字节		-32,768 到 32,767
	unsigned short	2字节		0 到 65,535
	long		4字节		-2,147,483,648 到 2,147,483,647
	unsigned long	4字节		0 到 4,294,967,295
	注意：各种类型储存大小和系统位数有关，单目前通用的以64为为主	
	可以使用sizeof（type）得到对象或类型储存字节的大小
	

	浮点类型：
	类型		存储大小	值范围			精度
	float		4字节		1.2E-38 到 3.4E+38	6 位小数
	double		8字节		2.3E-308 到 1.7E+308	15 位小数
	long double	16字节		3.4E-4932 到 1.1E+4932	19 位小数
	头文件 float.h 定义了宏

	void类型：
	void没有指定的值，通常用于是那种情况：
	1、函数返回为空
		
	2、函数参数为空（不带参数的函数可以接受一个void  eg（ int rand(void); ））

	3、指针指向void
	

	------
	a，默认为10进制 ，10 ，20。
 	b，以0开头为8进制，045，021。
	c.，以0b开头为2进制，0b11101101。
 	d，以0x开头为16进制，0x21458adf。


变量：
	类型：chart	int	float	double	void
	eg:
		int i=1,j=3,k=4;
		chart	c,ch;
		float	f,salart;
		double	d;
		
变量的声明：
	变量声明有两种情况：
	1、需要建立储存空间的，列如：int a; 在声明的时候就已经建立了储存空间。
	2、不需要建立储存空间，通过使用extern关键字声明变量名，而不去定义它 eg: extern int a;其中变量a可以在别的文	   	  件中定义的
	

	除非有extern关键之否则都是变量的定义
	extern int i;//声明不是定义
	int i;//声明,也是定义


常量：
	常量是固定值，在程序执行期间不会改变，这些固定的值又叫字面量。定义后不能被修改 常量名建议使用大写字母


字符常量：
	\\	字符 \
	\b	退格键
	\f	换页键
	\n	换行键
	\r	回车键
	\ooo	一到三位的八进制数
	\xhh ...一个或多个的十六进制数


定义常量：
	1、使用#define 预处理器  eg:  #define WANG(变量名) value(变量值)
	2、使用const关键字	eg:  const int WANG = 10;
	
	注意：#define是宏定义，它不能定义常量但宏定义可以实现在字面意义上和其他定义常量相同的功能
	      本质区别在于#define不为宏名分配内存，而const也不为常量分配内存，其实const并不是去定义
	      一个常量而是去改变一个变量的储存类型，把该变量内存改为只读


C储存类：
	储存类定义程序中变量函数的范围（可见性），和生命周期；
	可用的储存类：auto、register、static、extern

	auto储存类是所有局部变量默认的储存类,auto只能用在函数内
		{
			int mount;
			auto int month;
		}


	register储存类：
	register储存类用于定义储存在寄存器中而不是RAM中的局部变量，这意味着变量的最大尺寸等于寄存器的
	大小（通常是一个词），且不能对他应用一元 "&" 运算符（因为它没有内存）
	{
		register int miles;
	}

	static储存类：
	static 存储类指示编译器在程序的生命周期内保持局部变量的存在，而不需要在每次它进入和离开作用域时进行创建和			毁。因此，使用 static 修饰局部变量可以在函数调用之间保持局部变量的值。全局变量默认就是它（和js全局变量一样）
	
	extern储存类：
	extern储存类提供一个全局变量的引用。全局变量对所有程序文件都是可见的	
		


















